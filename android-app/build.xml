<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 Dirk Vranckaert
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="WorkTime for Android" default="help" xmlns:zaa="antlib:com.zutubi.android.ant">

    <!--
        To only build the application use "ant clean build"
        To build and test the application use "ant all clean emma debug install test" on the android-app-test module
        To release use "ant clean increment-version release set-name-apk-nightly commit-version"

        Make sure that you have a local.properties in which the following values are defined:
        * sdk.dir => References to the root of your Android SDK directory (required for all builds)
        * key.store => The location where your Android Market keystore file is available (only required for release)
        * key.alias => The Android Market keystore alias (only required for release)
        * key.store.password => The password for the Android Market keystore (only required for release)
        * key.alias.password => The password for the Android Market keystore alias (only required for release)
        * svn.repository.username => Your username on the SVN repository where the changes should be committed (only required for release)
        * svn.repository.password => Your password on the SVN repository where the changes should be committed (only required for release)
    -->

    <!-- Zutubi Android Ant library for automated versioning -->
    <taskdef uri="antlib:com.zutubi.android.ant"
             resource="com/zutubi/android/ant/antlib.xml"
             classpath="ant-libs/zutubi-android-ant-0.1.2.jar"/>

    <target name="increment-version">
        <fail message="Don't try to release when no keystore is defined!" unless="key.store"/>
        <fail message="Don't try to release when no key alias is defined!" unless="key.alias"/>
        <fail message="Don't try to release when no keystore password is defined!" unless="key.store.password"/>
        <fail message="Don't try to release when no alias password is defined!" unless="key.alias.password"/>

        <zaa:bumpversion bumpname="false"/>
    </target>

    <!-- Change the name of the generated release APK-file to a name keeping in mind nightly and final release naming conventions-->
    <target name="set-name-apk-nightly">
        <!-- Get a reference to the AndroidManifest file to use some of it's parameters -->
        <xmlproperty file="AndroidManifest.xml" prefix="manifestFile" collapseAttributes="true"/>

        <mkdir dir="./bin/release"/>
        <copy file="./bin/${ant.project.name}-release.apk" tofile="./bin/release/${app.name}-${manifestFile.manifest.android:versionName} - Build${manifestFile.manifest.android:versionCode}.apk"/>
    </target>
    <target name="set-name-apk-final">
        <!-- Get a reference to the AndroidManifest file to use some of it's parameters -->
        <xmlproperty file="AndroidManifest.xml" prefix="manifestFile" collapseAttributes="true"/>

        <fail message="This is an unstable AndroidManifest!"/>
        <mkdir dir="./bin/release"/>
        <copy file="./bin/${ant.project.name}-release.apk" tofile="./bin/release/${app.name}-${manifestFile.manifest.android:versionName}.apk"/>
    </target>

    <!-- SVN ANT library-->
    <path id="svnant.classpath">
        <fileset dir="ant-libs/svn/">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

    <target name="commit-version">
        <fail message="The AndroidManifest.xml cannot be commited because no username is defined" unless="svn.repository.username"/>
        <fail message="The AndroidManifest.xml cannot be commited because no password is defined" unless="svn.repository.password"/>

        <available resource="org/tigris/subversion/svnant/svnantlib.xml"
                   classpathref="svnant.classpath"
                   property="available.svnant"/>
        <fail message="SVN-ANT is not available!" unless="${available.svnant}"/>
        <echo message="SVN-ANT is available = ${available.svnant}"/>

        <svn javahl="false" svnkit="true" username="${svn.repository.username}" password="${svn.repository.password}">
            <commit file="AndroidManifest.xml" message="Auto commit from Ant script for release"/>
            <update dir="."/>
        </svn>
    </target>

    <!-- Run Lint -->
    <target name="lint" description="Android Lint for code control">
        <echo>Running Lint...</echo>
        <exec executable="${sdk.dir}\tools\lint.bat" failonerror="true">
            <arg value="--xml"/>
            <arg value="lint-report.xml" />

            <arg value="."/>
        </exec>
    </target>

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <property file="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through an env var"
            unless="sdk.dir"
    />

<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->
<!--
    <target name="-pre-build">
    </target>
    <target name="-pre-compile">
    </target>

    /* This is typically used for code obfuscation.
       Compiled code location: ${out.classes.absolute.dir}
       If this is not done in place, override ${out.dex.input.absolute.dir} */
    <target name="-post-compile">
    </target>
-->

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->

    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />

</project>
